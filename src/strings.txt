{
    "Title":"REDEFINE : Reclassify Data Enhancement for Improved Normalization and Evaluation",
    "Description":"This app identifies potentially misclassified points in classification datasets by cross-examining results from supervised and unsupervised models. The result is a list of the points that get highlighted as potentially misclassified. More details can be found [here](https://github.com/elizabethe56/REDEFINE#readme).",
    "Header1":"Step 1: Data",
    "Data_Demo":"Use Iris Data",
    "Data_Demo_Cols":{"target":"target", "id":"id"},
    "Data_Demo_Help":"The iris dataset from Scikit-Learn, purposefully modified for testing purposes. Original dataset found [here](https://scikit-learn.org/stable/auto_examples/datasets/plot_iris_dataset.html#the-iris-dataset). Modifications found [here](https://github.com/elizabethe56/REDEFINE/blob/main/data/iris_data.ipynb).",
    "Data_Entry":"Upload dataset:",
    "Data_Entry_Help":"Upload a .CSV of your data. The data must be all numeric except your target and ID columns.",
    "Data_Entry_Error_Empty":"Please upload a dataset.",
    "Data_Entry_Error_Type":"Please upload a '.csv' file.",
    "Data_Entry_Error_File_Empty":"File is empty.",
    "Data_Entry_Error_Col_Num":"More than two columns have nonnumeric data.",
    "Show_Data_Toggle":"Show Raw Data",
    "Target_Entry":"Target Column:",
    "Target_Entry_Help":"Select the column that contains the class labels or categories for your data.",
    "ID_Entry":"ID Column:",
    "ID_Entry_Help":"Select the column that contains the individual identifiers for each observation.  If there is no such column, select '(None)'",
    "Default_Selectbox":["(Select)"],
    "None_Selectbox_Option":"(None)",
    "Column_Error_Empty":"Please choose a column.",
    "Column_Error_Dup":"Target and ID columns cannot be the same.",
    "Data_Set_Button":"Set Data",
    "Header2":"Step 2: Model Selection",
    "Param_Upload":"Upload Parameter File",
    "Param_Upload_Help":"Upload a parameters JSON file from a previous run.  Use the 'Reset Parameters' button to set the parameters.",
    "Param_Rand_Check":"Use given random seeds",
    "Param_Rand_Help":"If the uploaded JSON file contains random seeds, checking this box will use the provided random seeds when both validating and running the models. This means there should be identical results when this box is checked.",
    "Param_File_Upload":"Upload JSON file here:",
    "Param_Reset":"Reset Parameters",
    "Param_Reset_Help":"Sets the parameter fields with the values provided from the JSON file, or sets all fields to blank if no file is provided.",
    "Param_File_Error":"Please upload a parameters file.",
    "Scaler_Entry":"Select a scaler:",
    "Scaler_Entry_Help":"Select the scaling method that best fits your data. Uses Scikit-Learn methods, more information can be found [here](https://scikit-learn.org/stable/auto_examples/preprocessing/plot_all_scaling.html#plot-all-scaling-standard-scaler-section).",
    "Scaler_Options":["None", "Standard", "Min-Max", "Absolute Max", "Robust"],
    "Supervised_Entry":"Choose a supervised model:",
    "Supervised_Entry_Help":"More information on each option can be found here: [K Nearest Neighbors](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html) | [Random Forest](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html)",
    "Supervised_Options":["(Select)","K Nearest Neighbors", "Random Forest"],
    "Supervised_Params":{"K Nearest Neighbors":["n_neighbors", "weights"], "Random Forest":["n_estimators", "criterion", "max_depth"]},
    "Supervised_Params_Help":{"K Nearest Neighbors":["**n_neighbors : *int, default=5*** \n\n Number of neighbors to use by default for kneighbors queries", "**weights : *{'uniform', 'distance'}, callable or None, default='uniform'*** \n\n Weight function used in prediction. Possible values:\n* 'uniform' : uniform weights. All points in each neighborhood are weighted equally.\n* 'distance' : weight points by the inverse of their distance. in this case, closer neighbors of a query point will have a greater influence than neighbors which are further away.\n* callable : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights."], "Random Forest":["**n_estimators : *int, default=100*** \n\n The number of trees in the forest.", "**criterion : *{“gini”, “entropy”, “log_loss”}, default=”gini”*** \n\n The function to measure the quality of a split. Supported criteria are “gini” for the Gini impurity and “log_loss” and “entropy” both for the Shannon information gain, see Mathematical formulation. Note: This parameter is tree-specific.", "**max_depth : *int, default=None*** \n\n The maximum depth of the tree. If None, then nodes are expanded until all leaves are pure or until all leaves contain less than min_samples_split samples"]},
    "Unsupervised_Entry":"Choose an unsupervised model:",
    "Unsupervised_Entry_Help":"More information on each option can be found here: [KMeans](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)",
    "Unsupervised_Options":["(Select)","KMeans"],
    "Unsupervised_Params":{"KMeans":["max_iter", "tol"]},
    "Unsupervised_Params_Help":{"KMeans":["**max_iter : *int, default=300*** \n\n Maximum number of iterations of the k-means algorithm for a single run.", "**tol : *float, default=1e-4*** \n\n Relative tolerance with regards to Frobenius norm of the difference in the cluster centers of two consecutive iterations to declare convergence."]},
    "Validate_Button":"Validate",
    "Run_Button":"Run!",
    "Header3":"Results",
    "Results_Text":"Potentially misclassified points:",
    "Download_Results":"Download Results File",
    "Download_Metadata":"Download Metadata File",
    "Download_Parameters":"Download Parameters File",
    "Show_Plot_Toggle":"Show Plot",
    "Plot_Type":"Dimension Reduction Method:",
    "Plot_Type_Options":["PCA","t-SNE"],
    "Download_Plot":"Download Plot as HTML"
}